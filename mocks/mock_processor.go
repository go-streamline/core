package mocks

import (
	"github.com/go-streamline/interfaces/definitions"
	"github.com/sirupsen/logrus"
	"github.com/stretchr/testify/mock"
)

// MockProcessor is an autogenerated mock type for the Processor type
// it covers both the Processor and TriggerProcessor interfaces
type MockProcessor struct {
	mock.Mock
	definitions.Processor
	definitions.TriggerProcessor
}

func (m *MockProcessor) Execute(info *definitions.EngineFlowObject,
	fileHandler definitions.ProcessorFileHandler, log *logrus.Logger) (*definitions.EngineFlowObject, error) {
	args := m.Called(info, fileHandler, log)
	return args.Get(0).(*definitions.EngineFlowObject), args.Error(1)
}

func (m *MockProcessor) SetConfig(config map[string]interface{}) error {
	args := m.Called(config)
	return args.Error(0)
}

func (m *MockProcessor) Close() error {
	args := m.Called()
	return args.Error(0)
}

func (m *MockProcessor) GetID() string {
	args := m.Called()
	return args.String(0)
}

func (m *MockProcessor) Name() string {
	args := m.Called()
	return args.String(0)
}

func (m *MockProcessor) GetScheduleType() definitions.ScheduleType {
	args := m.Called()
	return args.Get(0).(definitions.ScheduleType)
}

func (m *MockProcessor) HandleSessionUpdate(update definitions.SessionUpdate) {
	m.Called(update)
}
